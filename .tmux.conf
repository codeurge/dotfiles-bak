TERM=screen-256color
set-option -g default-terminal $TERM
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-shell /usr/local/bin/zsh
set-option -g default-shell $SHELL
set-option -g history-limit 90000
set-option -g repeat-time 0 # turn off repetitive commands
set -g mouse off # Hardcore!!
setw -g mode-keys vi
set-option -g status-position top

# Keybindings
set-option -g prefix C-a # Change tmux prefix to Ctrl-a
unbind C-b # Release default prefix (Ctrl-b).
bind-key C-a send-prefix # Bind Prefix twice to send prefix to application in pane/window.
unbind % # Release default split binding.
bind | split-window -h # Bind split horizonital to |
bind - split-window -v # Bind split vertical to -
bind r source-file ~/.tmux.conf \; display "Reloaded!" # Bind Prefix r to reload tmux config.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind y select-window -t :-
bind u select-window -t :+
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

set -g base-index 1 # Starts the tmux window index at 1 instead of 0.
set-window-option -g pane-base-index 1 # Starts the tmux pane index at 1 instead of 0.
set -sg escape-time 1 # Reduces tmux command delay
setw -g monitor-activity on # Window activity monitoring enabled
set -g visual-activity on
set -g allow-rename off
set -g status-left-length 32
set -g status-right-length 150
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg blue
set -g pane-active-border-fg colour2
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
